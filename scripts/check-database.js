const DatabaseManager = require('../bot/managers/databaseManager');
const Utils = require('../bot/utils/utils');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */
async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  const dbManager = new DatabaseManager();
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    console.log('üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    const dbInitialized = await dbManager.init();
    
    if (!dbInitialized) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
      return;
    }
    
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = dbManager.getDatabaseStats();
    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.users}`);
    console.log(`üí¨ –ß–∞—Ç–æ–≤: ${stats.chats}`);
    console.log(`‚≠ê –û–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: ${stats.feedback}`);
    console.log(`üíæ –†–∞–∑–º–µ—Ä –ë–î: ${stats.dbSizeMB} –ú–ë`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
    const users = dbManager.db.prepare('SELECT * FROM users ORDER BY created_at DESC').all();
    
    for (const user of users) {
      console.log(`\n  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: ${user.id}`);
      console.log(`  Telegram ID: ${user.telegram_id}`);
      console.log(`  –ò–º—è: ${user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      console.log(`  Username: ${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log(`  –°–æ–∑–¥–∞–Ω: ${user.created_at}`);
      
      // –ü–æ–ª—É—á–∞–µ–º —á–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userChats = dbManager.getUserChats(user.id);
      console.log(`  üí¨ –ß–∞—Ç–æ–≤: ${userChats.length}`);
      
      for (const chat of userChats) {
        const status = chat.is_active ? '‚úÖ –ê–ö–¢–ò–í–ù–´–ô' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π';
        console.log(`    - ${chat.name} (ID: ${chat.id}) - ${status}`);
        console.log(`      –ú–æ–¥–µ–ª—å: ${chat.model}`);
        console.log(`      –°–æ–æ–±—â–µ–Ω–∏–π: ${chat.message_count}`);
        console.log(`      –°–æ–∑–¥–∞–Ω: ${chat.created_at}`);
        console.log(`      –û–±–Ω–æ–≤–ª–µ–Ω: ${chat.updated_at}`);
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
      const activeChat = dbManager.getActiveChat(user.id);
      if (activeChat.success) {
        console.log(`  üéØ –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç: ${activeChat.data.name} (ID: ${activeChat.data.id})`);
      } else {
        console.log(`  ‚ö†Ô∏è –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç: ${activeChat.error}`);
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
      const feedbackStats = dbManager.getUserFeedbackStats(user.id);
      console.log(`  üìä –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å: ${feedbackStats.totalFeedback} –∑–∞–ø–∏—Å–µ–π`);
      if (feedbackStats.totalFeedback > 0) {
        console.log(`    –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: ${feedbackStats.averageRating}`);
        console.log(`    –û—Ü–µ–Ω–∫–∏: ${JSON.stringify(feedbackStats.ratings)}`);
        console.log(`    –î–æ—Ä–∞–±–æ—Ç–∫–∏: ${feedbackStats.improvementFeedback}`);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —á–∞—Ç—ã
    console.log('\nüí¨ –í—Å–µ —á–∞—Ç—ã:');
    const allChats = dbManager.db.prepare(`
      SELECT c.*, u.telegram_id, u.first_name 
      FROM chats c 
      JOIN users u ON c.user_id = u.id 
      ORDER BY c.created_at DESC
    `).all();
    
    for (const chat of allChats) {
      const status = chat.is_active ? '‚úÖ –ê–ö–¢–ò–í–ù–´–ô' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π';
      console.log(`  ${chat.name} (ID: ${chat.id}) - ${status}`);
      console.log(`    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${chat.first_name} (${chat.telegram_id})`);
      console.log(`    –ú–æ–¥–µ–ª—å: ${chat.model}`);
      console.log(`    –°–æ–æ–±—â–µ–Ω–∏–π: ${chat.message_count}`);
      console.log(`    –°–æ–∑–¥–∞–Ω: ${chat.created_at}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    console.log('\n‚≠ê –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:');
    const feedback = dbManager.db.prepare(`
      SELECT f.*, u.telegram_id 
      FROM feedback f 
      JOIN users u ON f.user_id = u.id 
      ORDER BY f.created_at DESC 
      LIMIT 10
    `).all();
    
    for (const fb of feedback) {
      console.log(`  ${fb.feedback_type} - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${fb.user_telegram_id}`);
      console.log(`    –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${fb.comment_id}`);
      if (fb.rating) console.log(`    –û—Ü–µ–Ω–∫–∞: ${fb.rating}/5`);
      if (fb.feedback_text) console.log(`    –¢–µ–∫—Å—Ç: ${fb.feedback_text.substring(0, 50)}...`);
      console.log(`    –î–∞—Ç–∞: ${fb.created_at}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    dbManager.close();
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
if (require.main === module) {
  (async () => {
    console.log('üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    console.log('================================\n');
    
    await checkDatabase();
    
    console.log('\n‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  })();
}

module.exports = { checkDatabase };
