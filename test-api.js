const QwenApi = require('./bot/core/qwenApi');
const config = require('./bot/utils/config');

async function testApi() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...\n');
  
  const api = new QwenApi();
  
  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
  console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API...');
  const status = await api.checkStatus();
  if (status.success) {
    console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('üìä –°—Ç–∞—Ç—É—Å:', status.data);
  } else {
    console.log('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', status.error);
    return;
  }
  console.log();
  
  // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π
  console.log('2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π...');
  const models = await api.getModels();
  if (models.success) {
    console.log('‚úÖ –ú–æ–¥–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã');
    console.log('ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:', models.data);
  } else {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π:', models.error);
  }
  console.log();
  
  // –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  console.log('3Ô∏è‚É£ –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...');
  const testText = '–ù–æ–≤—ã–π iPhone 15 Pro Max –≤—ã—à–µ–ª! –¶–µ–Ω–∞ 150 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π';
  console.log('üìù –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç:', testText);
  
  const comments = await api.generateComments(testText);
  if (comments.success) {
    console.log('‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã');
    console.log('üí¨ –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log(comments.data);
  } else {
    console.log('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', comments.error);
  }
  console.log();
  
  console.log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testApi().catch(console.error);
}

module.exports = { testApi };
